-- DROP SCHEMA projet;

CREATE SCHEMA projet AUTHORIZATION projet;

-- DROP SEQUENCE projet.amis_id_seq;

CREATE SEQUENCE projet.amis_id_seq
	INCREMENT BY 1
	MINVALUE 1
	MAXVALUE 9223372036854775807
	START 1
	CACHE 1
	NO CYCLE;

-- Permissions

ALTER SEQUENCE projet.amis_id_seq OWNER TO projet;
GRANT ALL ON SEQUENCE projet.amis_id_seq TO projet;

-- DROP SEQUENCE projet.amis_new_id_seq;

CREATE SEQUENCE projet.amis_new_id_seq
	INCREMENT BY 1
	MINVALUE 1
	MAXVALUE 2147483647
	START 1
	CACHE 1
	NO CYCLE;

-- Permissions

ALTER SEQUENCE projet.amis_new_id_seq OWNER TO projet;
GRANT ALL ON SEQUENCE projet.amis_new_id_seq TO projet;

-- DROP SEQUENCE projet.associer_id_document_seq;

CREATE SEQUENCE projet.associer_id_document_seq
	INCREMENT BY 1
	MINVALUE 1
	MAXVALUE 2147483647
	START 1
	CACHE 1
	NO CYCLE;

-- Permissions

ALTER SEQUENCE projet.associer_id_document_seq OWNER TO projet;
GRANT ALL ON SEQUENCE projet.associer_id_document_seq TO projet;

-- DROP SEQUENCE projet.associer_idassocier_seq;

CREATE SEQUENCE projet.associer_idassocier_seq
	INCREMENT BY 1
	MINVALUE 1
	MAXVALUE 2147483647
	START 1
	CACHE 1
	NO CYCLE;

-- Permissions

ALTER SEQUENCE projet.associer_idassocier_seq OWNER TO projet;
GRANT ALL ON SEQUENCE projet.associer_idassocier_seq TO projet;

-- DROP SEQUENCE projet.associer_idcompte_seq;

CREATE SEQUENCE projet.associer_idcompte_seq
	INCREMENT BY 1
	MINVALUE 1
	MAXVALUE 2147483647
	START 1
	CACHE 1
	NO CYCLE;

-- Permissions

ALTER SEQUENCE projet.associer_idcompte_seq OWNER TO projet;
GRANT ALL ON SEQUENCE projet.associer_idcompte_seq TO projet;

-- DROP SEQUENCE projet.categorie_idcategorie_seq;

CREATE SEQUENCE projet.categorie_idcategorie_seq
	INCREMENT BY 1
	MINVALUE 1
	MAXVALUE 2147483647
	START 1
	CACHE 1
	NO CYCLE;

-- Permissions

ALTER SEQUENCE projet.categorie_idcategorie_seq OWNER TO projet;
GRANT ALL ON SEQUENCE projet.categorie_idcategorie_seq TO projet;

-- DROP SEQUENCE projet.compte_idcompte_seq;

CREATE SEQUENCE projet.compte_idcompte_seq
	INCREMENT BY 1
	MINVALUE 1
	MAXVALUE 2147483647
	START 1
	CACHE 1
	NO CYCLE;

-- Permissions

ALTER SEQUENCE projet.compte_idcompte_seq OWNER TO projet;
GRANT ALL ON SEQUENCE projet.compte_idcompte_seq TO projet;

-- DROP SEQUENCE projet.document_id_document_seq;

CREATE SEQUENCE projet.document_id_document_seq
	INCREMENT BY 1
	MINVALUE 1
	MAXVALUE 2147483647
	START 1
	CACHE 1
	NO CYCLE;

-- Permissions

ALTER SEQUENCE projet.document_id_document_seq OWNER TO projet;
GRANT ALL ON SEQUENCE projet.document_id_document_seq TO projet;

-- DROP SEQUENCE projet.ma_sequence;

CREATE SEQUENCE projet.ma_sequence
	INCREMENT BY 1
	MINVALUE 1
	MAXVALUE 9223372036854775807
	START 3
	CACHE 1
	NO CYCLE;

-- Permissions

ALTER SEQUENCE projet.ma_sequence OWNER TO projet;
GRANT ALL ON SEQUENCE projet.ma_sequence TO projet;

-- DROP SEQUENCE projet.ma_sequence2;

CREATE SEQUENCE projet.ma_sequence2
	INCREMENT BY 1
	MINVALUE 1
	MAXVALUE 9223372036854775807
	START 1
	CACHE 1
	NO CYCLE;

-- Permissions

ALTER SEQUENCE projet.ma_sequence2 OWNER TO projet;
GRANT ALL ON SEQUENCE projet.ma_sequence2 TO projet;

-- DROP SEQUENCE projet.organiser_id_document_seq;

CREATE SEQUENCE projet.organiser_id_document_seq
	INCREMENT BY 1
	MINVALUE 1
	MAXVALUE 2147483647
	START 1
	CACHE 1
	NO CYCLE;

-- Permissions

ALTER SEQUENCE projet.organiser_id_document_seq OWNER TO projet;
GRANT ALL ON SEQUENCE projet.organiser_id_document_seq TO projet;

-- DROP SEQUENCE projet.organiser_idcategorie_seq;

CREATE SEQUENCE projet.organiser_idcategorie_seq
	INCREMENT BY 1
	MINVALUE 1
	MAXVALUE 2147483647
	START 1
	CACHE 1
	NO CYCLE;

-- Permissions

ALTER SEQUENCE projet.organiser_idcategorie_seq OWNER TO projet;
GRANT ALL ON SEQUENCE projet.organiser_idcategorie_seq TO projet;

-- DROP SEQUENCE projet.organiser_idorganiser_seq;

CREATE SEQUENCE projet.organiser_idorganiser_seq
	INCREMENT BY 1
	MINVALUE 1
	MAXVALUE 2147483647
	START 1
	CACHE 1
	NO CYCLE;

-- Permissions

ALTER SEQUENCE projet.organiser_idorganiser_seq OWNER TO projet;
GRANT ALL ON SEQUENCE projet.organiser_idorganiser_seq TO projet;
-- projet.categorie definition

-- Drop table

-- DROP TABLE projet.categorie;

CREATE TABLE projet.categorie (
	idcategorie serial4 NOT NULL,
	libelle varchar(100) NULL,
	CONSTRAINT categorie_pkey PRIMARY KEY (idcategorie)
);

-- Permissions

ALTER TABLE projet.categorie OWNER TO projet;
GRANT ALL ON TABLE projet.categorie TO projet;


-- projet.compte definition

-- Drop table

-- DROP TABLE projet.compte;

CREATE TABLE projet.compte (
	idcompte int4 NOT NULL GENERATED BY DEFAULT AS IDENTITY( INCREMENT BY 1 MINVALUE 1 MAXVALUE 2147483647 START 1 CACHE 1 NO CYCLE),
	pseudo varchar(25) NOT NULL,
	motdepasse varchar(25) NOT NULL,
	email varchar(100) NOT NULL,
	CONSTRAINT compte_pkey PRIMARY KEY (idcompte)
);
CREATE UNIQUE INDEX idx_compte_pseudo ON projet.compte USING btree (pseudo);

-- Permissions

ALTER TABLE projet.compte OWNER TO projet;
GRANT ALL ON TABLE projet.compte TO projet;


-- projet."document" definition

-- Drop table

-- DROP TABLE projet."document";

CREATE TABLE projet."document" (
	id_document serial4 NOT NULL,
	sujet varchar(100) NULL,
	url varchar NOT NULL,
	CONSTRAINT document_pkey PRIMARY KEY (id_document)
);

-- Permissions

ALTER TABLE projet."document" OWNER TO projet;
GRANT ALL ON TABLE projet."document" TO projet;


-- projet.intervenant definition

-- Drop table

-- DROP TABLE projet.intervenant;

CREATE TABLE projet.intervenant (
	id_intervenant int4 NOT NULL,
	nom varchar(100) NULL,
	prenom varchar(100) NULL,
	CONSTRAINT intervenant_pkey PRIMARY KEY (id_intervenant)
);

-- Permissions

ALTER TABLE projet.intervenant OWNER TO projet;
GRANT ALL ON TABLE projet.intervenant TO projet;


-- projet.amis definition

-- Drop table

-- DROP TABLE projet.amis;

CREATE TABLE projet.amis (
	iddemandeur int4 NULL,
	idreceveur int4 NULL,
	status varchar(1) NULL,
	idamis int4 NOT NULL DEFAULT nextval('amis_id_seq'::regclass),
	CONSTRAINT chk_status CHECK (((status)::text = ANY ((ARRAY['E'::character varying, 'V'::character varying, 'R'::character varying])::text[]))),
	CONSTRAINT amis_iddemandeur_fkey FOREIGN KEY (iddemandeur) REFERENCES projet.compte(idcompte),
	CONSTRAINT amis_idreceveur_fkey FOREIGN KEY (idreceveur) REFERENCES projet.compte(idcompte)
);

-- Permissions

ALTER TABLE projet.amis OWNER TO projet;
GRANT ALL ON TABLE projet.amis TO projet;


-- projet.associer definition

-- Drop table

-- DROP TABLE projet.associer;

CREATE TABLE projet.associer (
	idassocier serial4 NOT NULL,
	idcompte serial4 NOT NULL,
	id_document serial4 NOT NULL,
	CONSTRAINT associer_pkey PRIMARY KEY (idassocier),
	CONSTRAINT associer_id_document_fkey FOREIGN KEY (id_document) REFERENCES projet."document"(id_document),
	CONSTRAINT associer_idcompte_fkey FOREIGN KEY (idcompte) REFERENCES projet.compte(idcompte)
);

-- Permissions

ALTER TABLE projet.associer OWNER TO projet;
GRANT ALL ON TABLE projet.associer TO projet;


-- projet.auteur definition

-- Drop table

-- DROP TABLE projet.auteur;

CREATE TABLE projet.auteur (
	id_intervenant int4 NOT NULL,
	CONSTRAINT auteur_pkey PRIMARY KEY (id_intervenant),
	CONSTRAINT auteur_id_intervenant_fkey FOREIGN KEY (id_intervenant) REFERENCES projet.intervenant(id_intervenant)
);

-- Permissions

ALTER TABLE projet.auteur OWNER TO projet;
GRANT ALL ON TABLE projet.auteur TO projet;


-- projet.editeur definition

-- Drop table

-- DROP TABLE projet.editeur;

CREATE TABLE projet.editeur (
	id_intervenant int4 NOT NULL,
	CONSTRAINT editeur_pkey PRIMARY KEY (id_intervenant),
	CONSTRAINT editeur_id_intervenant_fkey FOREIGN KEY (id_intervenant) REFERENCES projet.intervenant(id_intervenant)
);

-- Permissions

ALTER TABLE projet.editeur OWNER TO projet;
GRANT ALL ON TABLE projet.editeur TO projet;


-- projet.organiser definition

-- Drop table

-- DROP TABLE projet.organiser;

CREATE TABLE projet.organiser (
	id int4 NOT NULL DEFAULT nextval('organiser_idorganiser_seq'::regclass),
	idcategorie serial4 NOT NULL,
	id_document serial4 NOT NULL,
	CONSTRAINT organiser_pkey PRIMARY KEY (id),
	CONSTRAINT organiser_id_document_fkey FOREIGN KEY (id_document) REFERENCES projet."document"(id_document),
	CONSTRAINT organiser_idcategorie_fkey FOREIGN KEY (idcategorie) REFERENCES projet.categorie(idcategorie)
);

-- Permissions

ALTER TABLE projet.organiser OWNER TO projet;
GRANT ALL ON TABLE projet.organiser TO projet;


-- projet."role" definition

-- Drop table

-- DROP TABLE projet."role";

CREATE TABLE projet."role" (
	idcompte int4 NOT NULL,
	"role" varchar(20) NOT NULL,
	CONSTRAINT role_pkey PRIMARY KEY (idcompte, role),
	CONSTRAINT role_role_check CHECK (((role)::text = ANY ((ARRAY['ADMINISTRATEUR'::character varying, 'UTILISATEUR'::character varying])::text[]))),
	CONSTRAINT role_idcompte_fkey FOREIGN KEY (idcompte) REFERENCES projet.compte(idcompte)
);

-- Permissions

ALTER TABLE projet."role" OWNER TO projet;
GRANT ALL ON TABLE projet."role" TO projet;


-- projet.user_ definition

-- Drop table

-- DROP TABLE projet.user_;

CREATE TABLE projet.user_ (
	id_user int4 NOT NULL,
	nom_user varchar(100) NULL,
	pseudo varchar(50) NULL,
	"role" varchar(50) NULL,
	idcompte int4 NOT NULL,
	CONSTRAINT user__idcompte_key UNIQUE (idcompte),
	CONSTRAINT user__pkey PRIMARY KEY (id_user),
	CONSTRAINT user__idcompte_fkey FOREIGN KEY (idcompte) REFERENCES projet.compte(idcompte)
);

CREATE TABLE projet.Emprunt (
    demandeur INT,
    receveur INT,
    Id_document INT,
    idEmprunt SERIAL NOT NULL,
    status CHAR(1) CHECK (status IN ('E', 'V', 'R')),
    PRIMARY KEY(idEmprunt),
    UNIQUE(idEmprunt),
    FOREIGN KEY(demandeur) REFERENCES Compte(idcompte),
    FOREIGN KEY(receveur) REFERENCES Compte(idcompte),
    FOREIGN KEY(Id_document) REFERENCES Document(Id_document)
);

-- Permissions

ALTER TABLE projet.user_ OWNER TO projet;
GRANT ALL ON TABLE projet.user_ TO projet;




-- Permissions

GRANT ALL ON SCHEMA projet TO projet;
